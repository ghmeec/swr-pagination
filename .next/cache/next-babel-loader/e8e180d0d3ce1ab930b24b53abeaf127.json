{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/mrmages/Desktop/GHMEEC/pagination/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport fetch from '../libs/fetch';\nimport Link from 'next/link';\nimport useSWR, { useSWRPages } from 'swr';\nexport default (function () {\n  var _useState = useState(2),\n      pageIn = _useState[0],\n      setPageIn = _useState[1];\n\n  var _useSWRPages = useSWRPages( // page key\n  'demo-page', // page component\n  function (_ref) {\n    var offset = _ref.offset,\n        withSWR = _ref.withSWR;\n    var link = 'https://us-east-1.aws.webhooks.mongodb-stitch.com/api/client/v2.0/app/the-ocean-app-ycpma/service/API/incoming_webhook/getNewsFeedsInPages?page=' + (offset || 1);\n    console.log(\"Link : \", link);\n\n    var _withSWR = withSWR( // use the wrapper to wrap the *pagination API SWR*\n    useSWR(link, fetch)),\n        projects = _withSWR.data; // you can still use other SWRs outside\n\n\n    if (!projects) {\n      return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"loading\");\n    }\n\n    return projects.map(function (project, index) {\n      return __jsx(\"div\", {\n        key: index + \"_\" + _Date$now().toString,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, __jsx(\"img\", {\n        src: project.image,\n        alt: \"Image\",\n        style: {\n          width: 200,\n          height: \"auto\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }), __jsx(\"p\", {\n        key: project.id,\n        style: {\n          fontSize: 18\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, project.title));\n    });\n  }, // one page's SWR => offset of next page\n  function (_ref2) {\n    var projects = _ref2.data;\n    setPageIn(pageIn + 1);\n    var page = pageIn;\n    return projects && projects.length ? page : null;\n  }, // deps of the page component\n  []),\n      pages = _useSWRPages.pages,\n      isLoadingMore = _useSWRPages.isLoadingMore,\n      isReachingEnd = _useSWRPages.isReachingEnd,\n      loadMore = _useSWRPages.loadMore;\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Church App Pagination Tests\"), pages, __jsx(\"button\", {\n    onClick: loadMore,\n    disabled: isReachingEnd || isLoadingMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, isLoadingMore ? '. . .' : isReachingEnd ? 'You have reached the end' : 'Load more'));\n});","map":{"version":3,"sources":["/Users/mrmages/Desktop/GHMEEC/pagination/pages/index.js"],"names":["useState","fetch","Link","useSWR","useSWRPages","pageIn","setPageIn","offset","withSWR","link","console","log","projects","data","map","project","index","toString","image","width","height","id","fontSize","title","page","length","pages","isLoadingMore","isReachingEnd","loadMore"],"mappings":";;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,IAAiBC,WAAjB,QAAoC,KAApC;AAEA,gBAAe,YAAM;AAAA,kBACMJ,QAAQ,CAAC,CAAD,CADd;AAAA,MACZK,MADY;AAAA,MACLC,SADK;;AAAA,qBAOfF,WAAW,EACb;AACA,aAFa,EAIb;AACA,kBAAyB;AAAA,QAAtBG,MAAsB,QAAtBA,MAAsB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AACvB,QAAMC,IAAI,GAAC,sJAAsJF,MAAM,IAAI,CAAhK,CAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,IAAtB;;AAFuB,mBAGID,OAAO,EAChC;AACAL,IAAAA,MAAM,CAACM,IAAD,EAAOR,KAAP,CAF0B,CAHX;AAAA,QAGTW,QAHS,YAGfC,IAHe,EAOvB;;;AAEA,QAAI,CAACD,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAGD,WAAOA,QAAQ,CAACE,GAAT,CAAa,UAACC,OAAD,EAASC,KAAT;AAAA,aAClB;AAAK,QAAA,GAAG,EAAEA,KAAK,GAAC,GAAN,GAAW,YAAWC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEF,OAAO,CAACG,KAAlB;AAAyB,QAAA,GAAG,EAAC,OAA7B;AAAqC,QAAA,KAAK,EAAE;AAACC,UAAAA,KAAK,EAAC,GAAP;AAAWC,UAAAA,MAAM,EAAC;AAAlB,SAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAG,QAAA,GAAG,EAAEL,OAAO,CAACM,EAAhB;AAAoB,QAAA,KAAK,EAAE;AAACC,UAAAA,QAAQ,EAAC;AAAV,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA2CP,OAAO,CAACQ,KAAnD,CAFF,CADkB;AAAA,KAAb,CAAP;AAMD,GAzBY,EA2Bb;AACA,mBAAwB;AAAA,QAAfX,QAAe,SAArBC,IAAqB;AACtBP,IAAAA,SAAS,CAACD,MAAM,GAAC,CAAR,CAAT;AACA,QAAMmB,IAAI,GAACnB,MAAX;AACA,WAAOO,QAAQ,IAAIA,QAAQ,CAACa,MAArB,GACHD,IADG,GAEH,IAFJ;AAGD,GAlCY,EAoCb;AACA,IArCa,CAPI;AAAA,MAGjBE,KAHiB,gBAGjBA,KAHiB;AAAA,MAIjBC,aAJiB,gBAIjBA,aAJiB;AAAA,MAKjBC,aALiB,gBAKjBA,aALiB;AAAA,MAMjBC,QANiB,gBAMjBA,QANiB;;AA+CnB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADK,EAEJH,KAFI,EAGL;AAAQ,IAAA,OAAO,EAAEG,QAAjB;AAA2B,IAAA,QAAQ,EAAED,aAAa,IAAID,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,aAAa,GAAG,OAAH,GAAaC,aAAa,GAAG,0BAAH,GAAgC,WAD1E,CAHK,CAAP;AAQD,CAvDD","sourcesContent":["import {useState} from 'react'\nimport fetch from '../libs/fetch'\nimport Link from 'next/link'\n\nimport useSWR, { useSWRPages } from 'swr'\n\nexport default () => {\n  const [pageIn,setPageIn]=useState(2)\n  const {\n    pages,\n    isLoadingMore,\n    isReachingEnd,\n    loadMore\n  } = useSWRPages(\n    // page key\n    'demo-page',\n\n    // page component\n    ({ offset, withSWR }) => {\n      const link='https://us-east-1.aws.webhooks.mongodb-stitch.com/api/client/v2.0/app/the-ocean-app-ycpma/service/API/incoming_webhook/getNewsFeedsInPages?page=' + (offset || 1);\n      console.log(\"Link : \",link )\n      const { data: projects } = withSWR(\n        // use the wrapper to wrap the *pagination API SWR*\n        useSWR(link, fetch)\n      )\n      // you can still use other SWRs outside\n\n      if (!projects) {\n        return <p>loading</p>\n      }\n\n      \n      return projects.map((project,index) => \n        <div key={index+\"_\"+(Date.now().toString)}>\n          <img src={project.image} alt=\"Image\" style={{width:200,height:\"auto\"}}/>\n          <p key={project.id} style={{fontSize:18}}>{project.title}</p>\n        </div>\n      )\n    },\n\n    // one page's SWR => offset of next page\n    ({ data: projects }) => {\n      setPageIn(pageIn+1)\n      const page=pageIn\n      return projects && projects.length\n        ? page\n        : null\n    },\n\n    // deps of the page component\n    []\n  )\n  \n  return <div>\n    <h1>Church App Pagination Tests</h1>\n    {pages}\n    <button onClick={loadMore} disabled={isReachingEnd || isLoadingMore}>\n      {isLoadingMore ? '. . .' : isReachingEnd ? 'You have reached the end' : 'Load more'}\n    </button>\n    \n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}