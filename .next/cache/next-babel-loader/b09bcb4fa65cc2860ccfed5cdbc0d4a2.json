{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nvar _jsxFileName = \"/Users/mrmages/Desktop/GHMEEC/pagination/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport fetch from '../libs/fetch';\nimport Link from 'next/link';\nimport useSWR, { useSWRPages } from 'swr';\nexport default (() => {\n  const {\n    0: pageIn,\n    1: setPageIn\n  } = useState(2);\n  const {\n    pages,\n    isLoadingMore,\n    isReachingEnd,\n    loadMore\n  } = useSWRPages( // page key\n  'demo-page', // page component\n  ({\n    offset,\n    withSWR\n  }) => {\n    const link = 'https://us-east-1.aws.webhooks.mongodb-stitch.com/api/client/v2.0/app/the-ocean-app-ycpma/service/API/incoming_webhook/getNewsFeedsInPages?page=' + (offset || 1);\n    console.log(\"Link : \", link);\n    const {\n      data: projects\n    } = withSWR( // use the wrapper to wrap the *pagination API SWR*\n    useSWR(link, fetch)); // you can still use other SWRs outside\n\n    if (!projects) {\n      return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, \"loading\");\n    }\n\n    console.log(projects);\n    return projects.map((project, index) => __jsx(\"div\", {\n      key: index + \"_\" + _Date$now().toString,\n      style: {},\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: project.image,\n      alt: \"Image\",\n      style: {\n        width: \"100%\",\n        sheight: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      key: project.id,\n      style: {\n        fontSize: 18\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, project.title)));\n  }, // one page's SWR => offset of next page\n  ({\n    data: projects\n  }) => {\n    setPageIn(pageIn + 1);\n    const page = pageIn;\n    console.log(\"The last item date\", projects[projects.length - 1].date); // return the last element id here\n\n    return projects && projects.length ? projects[projects.length - 1].date : null;\n  }, // deps of the page component\n  []);\n  return __jsx(\"div\", {\n    style: {\n      paddingRight: 8,\n      paddingLeft: 8\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Church App Pagination Tests\"), pages, __jsx(\"button\", {\n    onClick: loadMore,\n    disabled: isReachingEnd || isLoadingMore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, isLoadingMore ? '. . .' : isReachingEnd ? 'You have reached the end' : 'Load more'));\n});","map":{"version":3,"sources":["/Users/mrmages/Desktop/GHMEEC/pagination/pages/index.js"],"names":["useState","fetch","Link","useSWR","useSWRPages","pageIn","setPageIn","pages","isLoadingMore","isReachingEnd","loadMore","offset","withSWR","link","console","log","data","projects","map","project","index","toString","image","width","sheight","id","fontSize","title","page","length","date","paddingRight","paddingLeft"],"mappings":";;;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,IAAiBC,WAAjB,QAAoC,KAApC;AAEA,gBAAe,MAAM;AACnB,QAAM;AAAA,OAACC,MAAD;AAAA,OAAQC;AAAR,MAAmBN,QAAQ,CAAC,CAAD,CAAjC;AACA,QAAM;AACJO,IAAAA,KADI;AAEJC,IAAAA,aAFI;AAGJC,IAAAA,aAHI;AAIJC,IAAAA;AAJI,MAKFN,WAAW,EACb;AACA,aAFa,EAIb;AACA,GAAC;AAAEO,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAD,KAAyB;AACvB,UAAMC,IAAI,GAAC,sJAAsJF,MAAM,IAAI,CAAhK,CAAX;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBF,IAAtB;AACA,UAAM;AAAEG,MAAAA,IAAI,EAAEC;AAAR,QAAqBL,OAAO,EAChC;AACAT,IAAAA,MAAM,CAACU,IAAD,EAAOZ,KAAP,CAF0B,CAAlC,CAHuB,CAOvB;;AAEA,QAAI,CAACgB,QAAL,EAAe;AACb,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAEDH,IAAAA,OAAO,CAACC,GAAR,CAAYE,QAAZ;AACA,WAAOA,QAAQ,CAACC,GAAT,CAAa,CAACC,OAAD,EAASC,KAAT,KAClB;AAAK,MAAA,GAAG,EAAEA,KAAK,GAAC,GAAN,GAAW,YAAWC,QAAhC;AAA2C,MAAA,KAAK,EAAE,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAK,MAAA,GAAG,EAAEF,OAAO,CAACG,KAAlB;AAAyB,MAAA,GAAG,EAAC,OAA7B;AAAqC,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,MAAP;AAAcC,QAAAA,OAAO,EAAC;AAAtB,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAG,MAAA,GAAG,EAAEL,OAAO,CAACM,EAAhB;AAAoB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAC;AAAV,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2CP,OAAO,CAACQ,KAAnD,CAJF,CADK,CAAP;AAQD,GA3BY,EA6Bb;AACA,GAAC;AAAEX,IAAAA,IAAI,EAAEC;AAAR,GAAD,KAAwB;AACtBX,IAAAA,SAAS,CAACD,MAAM,GAAC,CAAR,CAAT;AACA,UAAMuB,IAAI,GAACvB,MAAX;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCE,QAAQ,CAACA,QAAQ,CAACY,MAAT,GAAgB,CAAjB,CAAR,CAA4BC,IAA7D,EAHsB,CAItB;;AACA,WAAOb,QAAQ,IAAIA,QAAQ,CAACY,MAArB,GACHZ,QAAQ,CAACA,QAAQ,CAACY,MAAT,GAAgB,CAAjB,CAAR,CAA4BC,IADzB,GAEH,IAFJ;AAGD,GAtCY,EAwCb;AACA,IAzCa,CALf;AAiDA,SAAO;AAAK,IAAA,KAAK,EAAE;AACXC,MAAAA,YAAY,EAAC,CADF;AAEXC,MAAAA,WAAW,EAAC;AAFD,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJK,EAKJzB,KALI,EAML;AAAQ,IAAA,OAAO,EAAEG,QAAjB;AAA2B,IAAA,QAAQ,EAAED,aAAa,IAAID,aAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,aAAa,GAAG,OAAH,GAAaC,aAAa,GAAG,0BAAH,GAAgC,WAD1E,CANK,CAAP;AAWD,CA9DD","sourcesContent":["import {useState} from 'react'\nimport fetch from '../libs/fetch'\nimport Link from 'next/link'\n\nimport useSWR, { useSWRPages } from 'swr'\n\nexport default () => {\n  const [pageIn,setPageIn]=useState(2)\n  const {\n    pages,\n    isLoadingMore,\n    isReachingEnd,\n    loadMore\n  } = useSWRPages(\n    // page key\n    'demo-page',\n\n    // page component\n    ({ offset, withSWR }) => {\n      const link='https://us-east-1.aws.webhooks.mongodb-stitch.com/api/client/v2.0/app/the-ocean-app-ycpma/service/API/incoming_webhook/getNewsFeedsInPages?page=' + (offset || 1);\n      console.log(\"Link : \",link )\n      const { data: projects } = withSWR(\n        // use the wrapper to wrap the *pagination API SWR*\n        useSWR(link, fetch)\n      )\n      // you can still use other SWRs outside\n\n      if (!projects) {\n        return <p>loading</p>\n      }\n\n      console.log(projects)\n      return projects.map((project,index) => \n        <div key={index+\"_\"+(Date.now().toString)} style={{\n  \n        }}>\n          <img src={project.image} alt=\"Image\" style={{width:\"100%\",sheight:\"auto\"}}/>\n          <p key={project.id} style={{fontSize:18}}>{project.title}</p>\n        </div>\n      )\n    },\n\n    // one page's SWR => offset of next page\n    ({ data: projects }) => {\n      setPageIn(pageIn+1)\n      const page=pageIn\n      console.log(\"The last item date\",projects[projects.length-1].date)\n      // return the last element id here\n      return projects && projects.length\n        ? projects[projects.length-1].date\n        : null\n    },\n\n    // deps of the page component\n    []\n  )\n  \n  return <div style={{\n          paddingRight:8,\n          paddingLeft:8\n         }}>\n    <h1>Church App Pagination Tests</h1>\n    {pages}\n    <button onClick={loadMore} disabled={isReachingEnd || isLoadingMore}>\n      {isLoadingMore ? '. . .' : isReachingEnd ? 'You have reached the end' : 'Load more'}\n    </button>\n    \n  </div>\n}\n"]},"metadata":{},"sourceType":"module"}