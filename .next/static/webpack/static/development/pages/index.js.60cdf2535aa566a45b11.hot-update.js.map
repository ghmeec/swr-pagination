{"version":3,"file":"static/webpack/static/development/pages/index.js.60cdf2535aa566a45b11.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import {useState} from 'react'\nimport fetch from '../libs/fetch'\nimport Link from 'next/link'\n\nimport useSWR, { useSWRPages } from 'swr'\n\nexport default () => {\n  const [pageIn,setPageIn]=useState(2)\n  const {\n    pages,\n    isLoadingMore,\n    isReachingEnd,\n    loadMore\n  } = useSWRPages(\n    // page key\n    'demo-page',\n\n    // page component\n    ({ offset, withSWR }) => {\n      const link='https://us-east-1.aws.webhooks.mongodb-stitch.com/api/client/v2.0/app/the-ocean-app-ycpma/service/API/incoming_webhook/getNewsFeedsInPages?page=' + (offset || 1);\n      console.log(\"Link : \",link )\n      const { data: projects } = withSWR(\n        // use the wrapper to wrap the *pagination API SWR*\n        useSWR(link, fetch)\n      )\n      // you can still use other SWRs outside\n\n      if (!projects) {\n        return <p>loading</p>\n      }\n\n      console.log(projects)\n      return projects.map((project,index) => \n        <div key={index+\"_\"+(Date.now().toString)} style={{\n  \n        }}>\n          <img src={project.image} alt=\"Image\" style={{width:\"100%\",sheight:\"auto\"}}/>\n          <p key={project.id} style={{fontSize:18}}>{project.title}</p>\n        </div>\n      )\n    },\n\n    // one page's SWR => offset of next page\n    ({ data: projects }) => {\n      setPageIn(pageIn+1)\n      const page=pageIn\n\n      // return the last element id here\n      return projects && projects.length\n        ? page\n        : null\n    },\n\n    // deps of the page component\n    []\n  )\n  \n  return <div style={{\n          paddingRight:8,\n          paddingLeft:8\n         }}>\n    <h1>Church App Pagination Tests</h1>\n    {pages}\n    <button onClick={loadMore} disabled={isReachingEnd || isLoadingMore}>\n      {isLoadingMore ? '. . .' : isReachingEnd ? 'You have reached the end' : 'Load more'}\n    </button>\n    \n  </div>\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AASA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAKA;AALA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAQA;AAGA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AAGA;AAhDA;AAAA;AAAA;AAAA;AACA;AAkDA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;A","sourceRoot":""}